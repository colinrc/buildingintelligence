<?xml version="1.0" encoding="utf-8"?>
<BaseConnectionForm  initialize="init()" updateComplete="{mainUpdateComplete()}" creationPolicy="auto" xmlns:fx="Controls.*" xmlns="Forms.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import Events.ComboSelectedEvent;
			import mx.collections.ArrayCollection;
			import Forms.AdvancedParam;
			import HashMap;
			import mx.events.*;
			import mx.controls.Alert;
			
			public var newForms:Array = new Array;
			public var DontAddAgain:Boolean = false;
						
			[Bindable]
			public var param:ArrayCollection= new ArrayCollection();
			
			public function init():void {
				this.addEventListener(ComboSelectedEvent.COMBOSELECTEDEVENT,comboSelected);
			}
			
			public function mainUpdateComplete():void {
				addForm(advArray);
				paramInit()
			}
			
			public function paramChanged():void{
				trace("paramchanged");
				DontAddAgain = true;
				dataHolder.parameters.clear();
				for (var parameter in param) {
					dataHolder.parameters.put(param[parameter].name, param[parameter].value);
				}
			}
			public function paramInit():void {
				trace("paraminit");
			
				//if (DontAddAgain == false) {
				if (dataHolder !=null){
					var parameters:HashMap = dataHolder.parameters;
					for (var parameter in parameters) {
						param.addItem({"name":parameter, "value":parameters[parameter]});
					}
				}
				//}
			}

			public function new_click():void {
				
				param.addItem(getNextName());
				callLater(focusNewRow);
			}
			public function getNextName():Object {
				
				for (n1 in mx.core.Application.application.rawConnections) {
					if (dataHolder.parameters.containsKey(mx.core.Application.application.rawConnections[n1].label) == false) {
						var ret:Object = {"name":mx.core.Application.application.rawConnections[n1].label, "value":mx.core.Application.application.rawConnections[n1].value};	
						return ret;				
					}
				}
				return {"name":"", "value":""};
			}
		
			public function delete_click():void {
				if (dataG.selectedItem != null) {
					Alert.show("Are you sure, press OK to delete " +dataG.selectedItem.name, "Delete", (Alert.OK | Alert.CANCEL), this, alertHandler);
            	}
  			}
        
            // Event handler function for displaying the selected Alert button.
            private function alertHandler(event:CloseEvent):void {
                if (event.detail==Alert.OK) {
                    param.removeItemAt(dataG.selectedIndex);
                    dataG.dataProvider = param;
                    modifed = true;
	            }
	                else {
	                    trace("delete cancelled");
				}
            }
			
			public function focusNewRow():void {
				firstFix=false
				//data.dataProvider = dataHolder.parameters;
				dataG.editedItemPosition = {columnIndex:0,rowIndex:dataG.dataProvider.length-1};
				dataG.editable=true;
				modifed = true;
				
			}
			public function itemBegin(event:Event):void {
				modifed = true;
				trace ("begin:"+event.dataField+":"+event.toString());	
			}
			
			public function comboSelected(event:ComboSelectedEvent):void {
				param[dataG.selectedIndex].value = event.value;	
				dataG.dataProvider = param;
			}
			
			public function itemEnd(event:Event):void {
				trace ("end"+event.toString());
				
				dataG.editable = false;	
				//if (event.dataField == "name") {
				//	param[dataG.selectedIndex].value = event.target.itemEditorInstance.dpValue[dataG.selectedIndex].value;
				//	trace(event.target.itemEditorInstance.dpValue[dataG.selectedIndex].value);
				//}	
				trace(dataG.itemEditorInstance.data.value);	
					
			}
			private function fixProvider():void {
				dataG.dataProvider = param;
			}
			
			public function single_click(event:Event):void {
				if (event.columnIndex == 1) { //description
					dataG.editedItemPosition = {columnIndex:1,rowIndex:dataG.selectedIndex};
					dataG.editable=true;
					modifed = true;
				}
			}
			
			public function double_click(event:Event):void {
				//open next screen
				trace ("open "+dataG.selectedItem.name);
			}	
				
		]]>
	</mx:Script>
	<mx:Array id="advArray">
		<mx:Label text="Parameters:"/>
		<mx:VBox>
			<mx:HBox  >
				<mx:DataGrid change="paramChanged()" initialize="paramInit()" dataProvider="{param}" id="dataG" width="100%" height="100%" editable="false" itemEditEnd="itemEnd(event)" itemEditBegin="itemBegin(event)" itemClick="single_click(event)" itemDoubleClick="double_click(event)" doubleClickEnabled="true">
					<mx:columns>
						<mx:DataGridColumn id="DDDT" dataField="name" headerText="Name" width="140" minWidth="130" editable="false"
	                      itemEditor="Utils.Cellrenderers.RawConnectionMultilineComboBox" rendererIsEditor="false"  editorDataField="result" />   
						<fx:DataGridColumnPlus id="pValue" editable="true" headerText="Value" width="400" dataField="value"/>
					</mx:columns>
				</mx:DataGrid>	
			</mx:HBox>
				
		</mx:VBox>
		<mx:HBox width="50%" height="100%" horizontalAlign="left">
			<mx:Button id="ins" label="New" x="10" y="513" width="52" click="new_click()" fontSize="10"/>
			<mx:Button id="del" label="Delete" click="delete_click()" fontSize="10"/>
		</mx:HBox>
	</mx:Array>
</BaseConnectionForm>