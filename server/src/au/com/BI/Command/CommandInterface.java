/*
 * Created on Feb 10, 2004
 *
 */

package au.com.BI.Command;

import org.jdom.Element;

import au.com.BI.User.User;

/**
 * @author Colin Canfield
 *
 **/

public interface CommandInterface {
	
	public final int Control = 0;
        public final int Message = 1;
        public final int Video = 2;
        public final int RawElement = 3;

        public void setJRobinData(au.com.BI.JRobin.JRobinData jRobinData);

        public au.com.BI.JRobin.JRobinData getJRobinData();

        public void setKey(String key);

        public boolean equals(Object toTest);
        
        public String getKey();

        public String getExtraInfo();

        public String getExtra2Info();

        public String getExtra3Info();

        public String getExtra4Info();

        public String getExtra5Info();

		public boolean isCommsCommand();

        public Object getRrdValueObject();

        public void setRrdValueObject(Object rrdValueObject);

        public void setExtraInfo(String extra);

        public void setExtra2Info(String extra);

        public void setExtra3Info(String extra);

        public void setExtra4Info(String extra);

        public void setExtra5Info(String extra);

        public void setDisplayName(String displayName);

        public String getCommandCode();

        public void setUser(User user);

        public boolean isUserControllerCommand();

        public User getUser();

        /**
         * Takes a string form of a command and sets the internal
         * value.
         * @param command
         */

        public void setCommand(String command);

        /**
         * Every command must be able to return an XML version of itself to send to the client
         * @return The XML.
         * @see org.jdom.Element
         */

        public Element getXMLCommand();

        /**
         * Display name is the name in the flash client
         * @return The display name 
         */
        public String getDisplayName();
 
        /**
         * Returns any of the fields from the command object
         * @return The requested field
         */
        public String getValue (Fields commandField) ;
        
        /**
         * Client commands are generated by the flash interface
         * @return
         */
        public boolean isClient();

        /**
         * If this command is for a particular device this will return it's ID. else -1;
         * @return
         */
        public int getTargetDeviceModel();

        /**
         * If targetting a particular device model instance.
         * @return
         */
        public long getTargetDeviceID();

        public void setTargetDeviceID(long ID);

        public void setTargetDeviceModel(int targetDeviceModel);

        /**
         * Used to populate a command from an XML element.
         * @param element
         */
        public void setFromElement(Element element);

        /**
         * Indicates whether the command should have each individual command to a device cached or only one per device.
         * @return true or false
         */
        public boolean cacheAllCommands();

        /**
         * Returns the timestamp in ms that the command was created at
         * @return Timestamp
         */
        public long getCreationDate();

		public boolean isAdminCommand();
		
		public CommandInterface clone() throws CloneNotSupportedException;
}
